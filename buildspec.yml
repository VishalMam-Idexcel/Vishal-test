version: 0.2
phases:
  pre_build:
    commands:
      - echo "Displaying details before update"
      - sed -i 's/selenium-standalone//g' wdio.conf.js
      - sed -i 's/wd.hub/\/wd\/hub/g' wdio.conf.js
      - sed -i 's/..hostname:/hostname:/g' wdio.conf.js
      - sed -i 's/..port:/port:/g' wdio.conf.js
      - echo "Displaying details after update"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$TemplateURL
  build:
    commands:
      - echo Building the Docker image...
      - DATE=$(date +%Y%b%d_%H%M%S)
      - TAG="$Release_ID-$DATE"
      - echo $TAG
      - docker build -t $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$TAG
      - echo Pushed docker image successfully
      # Fetch the existing task definition
      - echo "Fetching existing task definition..."
      - TASK_DEFINITION_NAME="your-task-def-name"
      - TASK_DEF_JSON=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_NAME --query taskDefinition)
      - echo "$TASK_DEF_JSON" > task-def.json
      # Remove unwanted fields to replicate the task definition
      - echo "Preparing new task definition..."
      - REPLICATED_TASK_DEF=$(jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-def.json)
      - echo "$REPLICATED_TASK_DEF" > new-task-def.json
      # Register the replicated task definition
      - echo "Registering replicated task definition..."
      - NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json "$REPLICATED_TASK_DEF" --query 'taskDefinition.taskDefinitionArn' --output text)
      - echo "New replicated task definition registered: $NEW_TASK_DEF_ARN"
